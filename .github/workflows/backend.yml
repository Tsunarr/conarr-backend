# kics-scan disable=555ab8f9-2001-455e-a077-f2d0f41e2fb9
---
name: Conarr Backend build and test
run-name: Conarr Backend build and test
permissions:
  contents: read
  actions: read
  checks: write

on:
  push:
  pull_request:
    branches:
      - main
jobs:
  test:
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        poetry-version: ["1.7.1"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Installing Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Installing go-Task
        uses: "pnorton5432/setup-task@v1"
        with:
          task-version: 3.34.1
      - name: Get config file from secrets
        run: echo ${{ secrets.PYCONARR_CONFIG_FILE }} | base64 --decode > config/pyconarr.yml
      - name: Testing app
        run: task poetry:test:ci
      - name: get reports
        uses: pmeier/pytest-results-action@main
        if: success() || failure()
        with:
          path: report.xml
      - name: get coverage
        uses: orgoro/coverage@v3.1
        if: github.event_name == 'pull_request'
        with:
          coverageFile: coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        poetry-version: ["1.7.1"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Installing Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Installing Poetry ${{ matrix.poetry-version }}
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Installing go-Task
        uses: "pnorton5432/setup-task@v1"
        with:
          task-version: 3.34.1
      - name: Build app
        run: task poetry:build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, '^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$') # only publish to PyPI on tag pushes with format [0-9].[0-9].[0-9]
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pyconarr
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
